{"version":3,"sources":["schoolHeader.jpg","Components/Nav.js","Components/LoginForm.js","Components/SignupForm.js","Components/Welcome.js","Components/Home.js","Components/calculategrade.js","Components/Result.js","Components/AdminInput.js","Components/App.js","Components/constants.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","props","logged_out_nav","className","href","onClick","display_form","logged_in_nav","this","username","handle_logout","display_home","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","logged_in","Component","LoginForm","state","password","handle_change","e","name","target","value","setState","prevstate","newState","onSubmit","handle_login","icon","faUser","onChange","placeholder","faKey","React","SignupForm","handle_signup","Welcome","Home","find_st_mark","items","val","studentsresult","find","res","student","mark","find_st_60_mark","parseFloat","toFixed","find_st_cas","cas","find_st_40_cas","find_st_total","find_st_tec_comment","teachers_comment","input_result_clicked","gradevalue","studentvalue","subjectvalue","examvalue","inputresultclicked","studnetresultclicked","classmarksclicked","gradeselectRef","current","selectedIndex","subjectselectRef","examselectRef","student_result_clicked","show_result","class_marks_clicked","grades","students","gradestudents","subjects","exams","results","createRef","auth_headers","header","fetch","method","headers","then","status","json","toast","error","data","catch","grade","body","JSON","stringify","subject","exam","get_grades","teacher_get_exams","event","teacher_get_subjects_by_grade","teacher_get_students_by_grade","teacher_get_students_by_subject","teacher_get_students_marks","get_exam_result_by_grade","warn","marks","comment","subject_select","subject_selected","ref","defaultValue","disabled","hidden","map","key","student_select","student_selected","studentselectRef","student_name","result_form","scope","onBlur","teachers_update_marks","teachers_update_cas","class_marks_diaplay","index","result","aria-haspopup","grade_selected","exam_selected","length","calculategrade","StudentResult","examvaluemulti1","examvaluemulti2","examvaluemulti3","studentresultclicked","gradestudentresultclicked","finalreportclicked","gradestudentfinalreportclicked","grade_student_result_clicked","final_report_clicked","graderesults","gradesubjects","studentresults","studentresultsmulti1","studentresultsmulti2","studentresultsmulti3","resultcomments","classteacher","grade_student_final_report_clicked","resultcomment","result_comment","examselectRef1","examselectRef2","examselectRef3","filterstudentsinputid","filterstudentslist","exammulti","get_all_students","get_subjects_by_grade","attributes","std","filter","toUpperCase","forEach","indexOf","childNodes","tr","style","display","studentid","get_student_result","studentgrade","student_grade","current_grade","get_student_result_calledbyall","find_result_comment","exam_title","item","payload","stateindex","cgpa","src","schoolHeader","colSpan","rowSpan","userid","rows","update_result_comment","ind","theory","Math","round","practical","total","gpa","push","reduce","sum","studentselected","count","exam1","exam2","exam3","results1","results2","results3","res1","res2","res3","mark1","mark2","mark3","mark20","mark30","mark50","marksum","toString","stateindex1","stateindex2","stateindex3","grade_select","onKeyUp","filterStudents","faSearch","height","exam_select","exam_select_multi1","exam_term","exam_select_multi2","exam_select_multi3","show_home","result_table","student_report_table","grade_student_report_table","AdminInput","edit_student_clicked","edit_student_subject_clicked","import_from_csv","teachers","studentsubject","jsonfromcsv","get_all_teacher_grades_students_subjects_studentsubject","users","addStudentToSubject","nextElementSibling","info","autoClose","toastId","dismiss","statusText","exception","processed","success","studentsedit","updateStudentName","updateStudentPhone","phone","updateStudentAddress","address","updateStudentDOB","date_of_birth","updateStudentGrade","subjectsedit","code","updateSubjectTeacher","teacher","faTimes","color","deleteStudentFromSubject","importfromcsv","cssClass","label","onFileLoaded","fileInfo","title","jsonarray","slice","d","row","undefined","dob","uploadStudentInformation","configure","draggable","App","get_refresh_token","local","localStorage","getItem","refresh_token","preventDefault","non_field_errors","set_refresh_token","local_storage","refresh","displayed_form","access_token","access","get_username","check_admin","removeItem","form","Authorization","refresh_access_token","a","is_admin","display_result","setItem","setInterval","Helmet","Result","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.b5f76b47.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/schoolHeader.6fa5b71c.jpg\";","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// function Nav(props) {\r\nclass Nav extends Component{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  componentDidMount(){\r\n  }\r\n\r\n  render(){\r\n    const logged_out_nav = (\r\n      <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item\"><a className=\"nav-link\" href={null} onClick={() => this.props.display_form('login')}>Login</a></li>\r\n        <li className=\"nav-item\"><a className=\"nav-link\" href={null} onClick={() => this.props.display_form('signup')}>Signup</a></li>\r\n      </ul>\r\n    );\r\n\r\n    const logged_in_nav = (\r\n      <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item\"><a className=\"nav-link\" href={null} onClick={() => this.props.display_form('AdminInput')}>{this.props.username}</a></li>\r\n      <li  className=\"nav-item\"><a className=\"nav-link\" href={null} onClick={this.props.handle_logout}>Logout</a></li>\r\n    </ul>\r\n  );\r\n  return <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n       \r\n        <a className=\"navbar-brand\" onClick={this.props.display_home}>Student Report</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n            \r\n            </ul>\r\n            \r\n            <span className=\"navbar-text\">\r\n            {this.props.logged_in ? logged_in_nav : logged_out_nav}\r\n            </span>\r\n        </div>\r\n    </nav>;\r\n    }\r\n}\r\n\r\nexport default Nav;\r\n\r\nNav.propTypes = {\r\n  logged_in: PropTypes.bool.isRequired,\r\n  display_form: PropTypes.func.isRequired,\r\n  display_home: PropTypes.func.isRequired,\r\n  handle_logout: PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faKey} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass LoginForm extends React.Component {\r\n  state = {\r\n    username: '',\r\n    password: ''\r\n  };\r\n\r\n  handle_change = e => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState(prevstate => {\r\n      const newState = { ...prevstate };\r\n      newState[name] = value;\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (<div className=\"container mt-1\">\r\n    <div className=\"d-flex justify-content-center h-100\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h3 >Log In</h3>\r\n          \r\n        </div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={e => this.props.handle_login(e, this.state)}>\r\n            <div className=\"input-group form-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\"><FontAwesomeIcon icon={ faUser} /></span>\r\n              </div>\r\n              <input \r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.handle_change}\r\n                    className=\"form-control input_user\" \r\n                    placeholder=\"Username\"\r\n                  />\r\n            </div>\r\n            <div className=\"input-group form-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\"><FontAwesomeIcon icon={faKey} /></span>\r\n              </div>\r\n              <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.handle_change} \r\n                  className=\"form-control input_pass\" \r\n                  placeholder=\"Password\"\r\n                  />\r\n            </div>\r\n            <div className=\"row align-items-center remember\">\r\n              <input type=\"checkbox\"/>Remember Me\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Login\" className=\"btn float-right btn-outline-dark\"/>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"card-footer\">\r\n          <div className=\"d-flex justify-content-center links\">\r\n            Don't have an account? Forgot your password?\r\n          </div>\r\n          <div className=\"d-flex justify-content-center\">\r\n            Contact Administrator\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n\r\nLoginForm.propTypes = {\r\n  handle_login: PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faKey} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass SignupForm extends React.Component {\r\n  state = {\r\n    username: '',\r\n    password: ''\r\n  };\r\n\r\n  handle_change = e => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState(prevstate => {\r\n      const newState = { ...prevstate };\r\n      newState[name] = value;\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (<div className=\"container mt-1\">\r\n    <div className=\"d-flex justify-content-center h-100\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h3 >Sign Up</h3>\r\n          \r\n        </div>\r\n        <div className=\"card-body\">\r\n      <form onSubmit={e => this.props.handle_signup(e, this.state)}>\r\n        <div className=\"input-group form-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\"><FontAwesomeIcon icon={ faUser} /></span>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.handle_change}\r\n                className=\"form-control input_user\"\r\n                placeholder=\"Username\"\r\n              />\r\n         </div>\r\n            <div className=\"input-group form-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\"><FontAwesomeIcon icon={faKey} /></span>\r\n              </div>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.handle_change}\r\n                className=\"form-control input_pass\"\r\n                placeholder=\"Password\"\r\n              />\r\n              </div>\r\n              <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Sign Up\" className=\"btn float-right btn-outline-dark\"/>\r\n            </div>\r\n         </form>\r\n         </div>\r\n        <div className=\"card-footer\">\r\n          \r\n          <div className=\"d-flex justify-content-center\">\r\n            Contact Administrator\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignupForm;\r\n\r\nSignupForm.propTypes = {\r\n  handle_signup: PropTypes.func.isRequired\r\n};","import React from 'react';\r\n\r\nfunction Welcome(){\r\n    return( <div className=\"container mt-1\">\r\n                <div className=\"d-flex justify-content-center h-100\">\r\n                    <div className=\"welcome\">\r\n                        <div className=\"card-header\">\r\n                       <h3> Information</h3>\r\n                        </div>\r\n                        <div className=\"card-body text-left\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    Admin should:\r\n                                    <ol>\r\n                                        <li>maintain teacher's login details.</li>\r\n                                        <li>add class' details.</li>\r\n                                        <li>add student's details.</li>\r\n                                        <li>add subjects (subject's code needs to be unique)</li>\r\n                                        <li>map student and subject</li>\r\n                                        <li>add exams</li>\r\n                                    </ol>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    Teacher:\r\n                                    <ol>\r\n                                        <li>should add marks of each student.(subject teacher should add his/her subject's  marks.)</li>\r\n                                        <li>can see marks of all subjects</li>\r\n                                        <li>can see student's report card</li>\r\n                                        <li>cannot add comments (should be class teacher)</li>\r\n                                        <li>subjects with total marks 50 should be added as marks equivalent to 100</li>\r\n                                    </ol>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"card-footer\">\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                Please login to continue\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome;","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport {HOST} from './constants';\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            grades:[],\r\n            students:[],\r\n            gradestudents:[],\r\n            subjects:[],\r\n            exams:[],\r\n            results:[],\r\n            studentsresult:[],\r\n            gradevalue:'',\r\n            studentvalue:'',\r\n            subjectvalue:'',\r\n            examvalue:'',\r\n            inputresultclicked:true,\r\n            studnetresultclicked:false,\r\n            classmarksclicked:false,\r\n        }\r\n        this.gradeselectRef = React.createRef();\r\n        this.examselectRef = React.createRef();\r\n        this.subjectselectRef = React.createRef();\r\n    }\r\n    \r\n    async get_grades(){\r\n        const header = await this.props.auth_headers();\r\n        await fetch(HOST+'/teachers-view-grade/', {\r\n            method: 'GET',\r\n            headers: header ,     \r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                 \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                this.setState({grades:data});\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n            });\r\n    }\r\n    async teacher_get_subjects_by_grade(grade){\r\n        const header = await this.props.auth_headers();\r\n        await fetch(HOST+'/teachers-view-subjects-grade/'+grade+'/', {\r\n            method: 'GET',\r\n            headers: header ,\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                 \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                  \r\n                this.setState({subjects:data});\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n    }\r\n\r\n    async teacher_get_students_marks(){\r\n        let header = await this.props.auth_headers();\r\n        header['Content-Type'] = 'application/json';\r\n        await fetch(HOST+'/teachers-view-students_marks/', {\r\n            method: 'POST',\r\n            headers: header ,\r\n            body:JSON.stringify({\r\n                'grade': this.state.gradevalue,\r\n                'exam': this.state.examvalue,\r\n                'subject': this.state.subjectvalue,\r\n            })\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                 \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                  \r\n                this.setState({studentsresult:data});\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n    }\r\n    \r\n    async teacher_get_students_by_subject(subject){\r\n        const header = await this.props.auth_headers();\r\n        await fetch(HOST+'/teachers-view-students-by-subject/'+subject+'/', {\r\n            method: 'GET',\r\n            headers: header ,\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                 \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                  \r\n                this.setState({students:data});\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n    }\r\n\r\n\r\n    async teacher_get_students_by_grade(grade){\r\n        const header = await this.props.auth_headers();\r\n        await fetch(HOST+'/teachers-view-students-by-grade/'+grade+'/', {\r\n            method: 'GET',\r\n            headers: header ,\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                 \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                  \r\n                this.setState({gradestudents:data});\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n    }\r\n\r\n    async teacher_get_exams(){\r\n        const header = await this.props.auth_headers();\r\n        await fetch(HOST+'/teachers-view-exams/', {\r\n            method: 'GET',\r\n            headers: header ,\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                 \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                  \r\n                this.setState({exams:data});\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n    }\r\n\r\n\r\n    async get_exam_result_by_grade(exam, grade){\r\n        const header = await this.props.auth_headers();\r\n        await fetch(HOST+'/get-exam-result-by-grade/'+exam+'/'+grade+'/', {\r\n            method: 'GET',\r\n            headers: header ,\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                 \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                  \r\n                this.setState({results:data});\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n    }\r\n    componentDidMount(){\r\n        this.get_grades();\r\n        this.teacher_get_exams();\r\n    }\r\n    grade_selected(event){\r\n        this.setState({\r\n            gradevalue:event.target.value,\r\n            // grades:[],\r\n            students:[],\r\n            subjects:[],\r\n            // exams:[],\r\n            results:[],\r\n            studentsresult:[],\r\n            // gradevalue:'',\r\n            studentvalue:'',\r\n            subjectvalue:'',\r\n            examvalue:'',\r\n        });\r\n        this.teacher_get_subjects_by_grade(event.target.value);\r\n        this.teacher_get_students_by_grade(event.target.value);\r\n\r\n\r\n        if(this.subjectselectRef.current){\r\n            this.subjectselectRef.current.selectedIndex=0\r\n        }\r\n        if(this.examselectRef.current){\r\n            this.examselectRef.current.selectedIndex=0\r\n        }\r\n    }\r\n    subject_selected(event){\r\n        this.setState({\r\n            subjectvalue:event.target.value,\r\n        });\r\n        this.teacher_get_students_by_subject(event.target.value);\r\n        this.teacher_get_students_marks();\r\n    }\r\n    student_selected(event){\r\n        this.setState({studentvalue:event.target.value});\r\n    }\r\n    exam_selected(event){\r\n        this.setState({\r\n            examvalue:event.target.value,\r\n            // grades:[],\r\n            // students:[],\r\n            // subjects:[],\r\n            // exams:[],\r\n            results:[],\r\n            studentsresult:[],\r\n            // gradevalue:'',\r\n            studentvalue:'',\r\n            subjectvalue:'',\r\n            // examvalue:'',\r\n        });\r\n        if(this.state.classmarksclicked){\r\n            if(this.state.gradevalue){\r\n                this.get_exam_result_by_grade(event.target.value, this.state.gradevalue);\r\n            }else{\r\n                toast.warn('Please Select Grade');\r\n            }\r\n        }\r\n        \r\n        if(this.subjectselectRef.current){\r\n            this.subjectselectRef.current.selectedIndex=0\r\n        }\r\n    }\r\n    \r\n    async teachers_update_marks(event){\r\n        let student = event.target.id;\r\n        let marks = event.target.value;\r\n        event.target.value = null;\r\n        if(!marks){\r\n            return;\r\n        }\r\n        let header = await this.props.auth_headers();\r\n        header['Content-Type'] = 'application/json';\r\n        let val = this.state.studentsresult.find(res=> res.student == student); \r\n        let data = {\r\n            'grade': this.state.gradevalue,\r\n            'exam': this.state.examvalue,\r\n            'subject': this.state.subjectvalue,\r\n            'student': student,\r\n            'marks': marks,\r\n            'cas':(val)?val.cas:0,\r\n            'comment':(val)?val.teachers_comment:'',\r\n        }\r\n        await fetch(HOST+'/teachers-update-student-mark/', {\r\n            method: 'POST',\r\n            headers: header ,\r\n            body:JSON.stringify(data),\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                 \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                  \r\n                this.teacher_get_students_marks();\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n    }\r\n    async teachers_update_cas(event){\r\n        let student = event.target.id;\r\n        let cas = event.target.value;\r\n        event.target.value = null;\r\n        if(!cas){\r\n            return;\r\n        }\r\n        let header = await this.props.auth_headers();\r\n        header['Content-Type'] = 'application/json';\r\n        let val = this.state.studentsresult.find(res=> res.student == student); \r\n        let data = {\r\n            'grade': this.state.gradevalue,\r\n            'exam': this.state.examvalue,\r\n            'subject': this.state.subjectvalue,\r\n            'student': student,\r\n            'marks': (val)?val.mark:0,\r\n            'cas':cas,\r\n            'comment':(val)?val.teachers_comment:'',\r\n        }\r\n        await fetch(HOST+'/teachers-update-student-cas/', {\r\n            method: 'POST',\r\n            headers: header ,\r\n            body:JSON.stringify(data),\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                 \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                  \r\n                this.teacher_get_students_marks();\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n    }\r\n    async teachers_update_comment(event){\r\n        let student = event.target.id;\r\n        let comment = event.target.value;\r\n        event.target.value = null;\r\n        let val = this.state.studentsresult.find(res=> res.student == student); \r\n        if(!comment){\r\n            return;\r\n        }\r\n        let header = await this.props.auth_headers();\r\n        header['Content-Type'] = 'application/json';\r\n        let data = {\r\n            'grade': this.state.gradevalue,\r\n            'exam': this.state.examvalue,\r\n            'subject': this.state.subjectvalue,\r\n            'student': student, \r\n            'marks': (val)?val.mark:0,\r\n            'cas':(val)?val.cas:0,\r\n            'comment':comment,\r\n        }\r\n        await fetch(HOST+'/teachers-update-student-comment/', {\r\n            method: 'POST',\r\n            headers: header ,\r\n            body:JSON.stringify(data),\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                 \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                  \r\n                this.teacher_get_students_marks();\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n    }\r\n    find_st_mark=(items)=>{\r\n        let val = this.state.studentsresult.find(res =>res.student == items.id); \r\n        return (val)? val.mark:0;\r\n    }\r\n    find_st_60_mark=(items)=>{\r\n        let val = this.state.studentsresult.find(res =>res.student == items.id); \r\n        return (val)? (0.6* parseFloat(val.mark)).toFixed(2):0;\r\n    }\r\n    find_st_cas=(items)=>{\r\n        let val = this.state.studentsresult.find(res =>res.student == items.id); \r\n        return (val)? val.cas:0;\r\n    }\r\n    find_st_40_cas=(items)=>{\r\n        let val = this.state.studentsresult.find(res =>res.student == items.id); \r\n        return (val)? (0.4* parseFloat(val.cas)).toFixed(2):0;\r\n    }\r\n    find_st_total=(items)=>{\r\n        let val = this.state.studentsresult.find(res =>res.student == items.id); \r\n        return (val)? (0.6* parseFloat(val.mark) + 0.4* parseFloat(val.cas)).toFixed(2):0;\r\n    }\r\n    find_st_tec_comment=(items)=>{ \r\n        let val = this.state.studentsresult.find(res=> res.student == items.id); \r\n        return (val)?val.teachers_comment:'';\r\n    }\r\n    input_result_clicked = ()=>{\r\n        this.setState({\r\n            // grades:[],\r\n            // students:[],\r\n            // subjects:[],\r\n            // exams:[],\r\n            // results:[],\r\n            // studentsresult:[],\r\n            gradevalue:'',\r\n            studentvalue:'',\r\n            subjectvalue:'',\r\n            examvalue:'',\r\n            inputresultclicked:true,\r\n            studnetresultclicked:false,\r\n            classmarksclicked:false,\r\n        });\r\n        if(this.gradeselectRef.current){\r\n            this.gradeselectRef.current.selectedIndex=0;\r\n        }\r\n        if(this.subjectselectRef.current){\r\n            this.subjectselectRef.current.selectedIndex=0\r\n        }\r\n        if(this.examselectRef.current){\r\n            this.examselectRef.current.selectedIndex=0\r\n        }\r\n    }\r\n    student_result_clicked=()=>{\r\n        this.props.show_result();\r\n    }\r\n    class_marks_clicked=()=>{\r\n        this.setState({\r\n            // grades:[],\r\n            // students:[],\r\n            // subjects:[],\r\n            // exams:[],\r\n            // results:[],\r\n            // studentsresult:[],\r\n            gradevalue:'',\r\n            studentvalue:'',\r\n            subjectvalue:'',\r\n            examvalue:'',\r\n            inputresultclicked:false,\r\n            studnetresultclicked:false,\r\n            classmarksclicked:true,\r\n        });\r\n        if(this.gradeselectRef.current){\r\n            this.gradeselectRef.current.selectedIndex=0;\r\n        }\r\n        if(this.subjectselectRef.current){\r\n            this.subjectselectRef.current.selectedIndex=0\r\n        }\r\n        if(this.examselectRef.current){\r\n            this.examselectRef.current.selectedIndex=0\r\n        }\r\n    }\r\n    render(){\r\n        let subject_select = <li className=\"btn-group mx-2\">\r\n<                   span className=\"mx-2\">Subject</span>\r\n                    <select onChange={(e)=>this.subject_selected(e)} ref={this.subjectselectRef}  className=\"form-control form-control-sm\" defaultValue=\"none\">\r\n                        <option value=\"none\" disabled hidden>Select an Option </option> \r\n                        {\r\n                        this.state.subjects.map((items, key) => \r\n                        <option key={key} value={items.id}>{items.name}</option>\r\n                        )}\r\n                    </select>\r\n                </li>\r\n\r\n        let student_select = <li className=\"btn-group mx-2\">\r\n                <span className=\"mx-2\">Student</span>\r\n                <select onChange={(e)=>this.student_selected(e)} ref={this.studentselectRef}  className=\"form-control form-control-sm\" defaultValue=\"none\">\r\n                    <option value=\"none\" disabled hidden>Select an Option </option> \r\n                    {\r\n                    this.state.gradestudents.map((items, key) => \r\n                    <option key={key} value={items.id}>{items.student_name}</option>\r\n                    )}\r\n                </select>\r\n                </li>\r\n        let result_form = \r\n            <div className=\"container\">\r\n                <table className=\"table table-bordered table-striped table-hover table-sm\">\r\n                    <thead>\r\n                        <tr><th>SN</th><th>Student</th><th>Theory</th><th>CAS</th><th>60% of Theory</th><th>40% of CAS</th><th>Total</th></tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.students.map((items, key)=>\r\n                        <tr key={key}>\r\n                            <th scope=\"row\">{key+1}</th>\r\n                            <td><span className=\"form-control-sm\">{items.student_name}</span></td>\r\n                            <td><input type=\"number\" placeholder={this.find_st_mark(items)} id={items.id} className=\"form-control form-control-sm\" onBlur={(e)=>this.teachers_update_marks(e)}/></td>\r\n                            <td><input type=\"number\" placeholder={this.find_st_cas(items)} id={items.id} className=\"form-control form-control-sm\" onBlur={(e)=>this.teachers_update_cas(e)}/></td>\r\n                            <td><span id={items.id} >{this.find_st_60_mark(items)}</span></td>\r\n                            <td><span id={items.id} >{this.find_st_40_cas(items)}</span></td>\r\n                            <td><span id={items.id} >{this.find_st_total(items)}</span></td>\r\n                            {/* <td><input type=\"text\" placeholder={this.find_st_tec_comment(items)} id={items.id} className=\"form-control form-control-sm\" onBlur={(e)=>this.teachers_update_comment(e)}/></td> */}\r\n                        </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        \r\n        let class_marks_diaplay = \r\n            <div className=\"container \">\r\n                <table className=\"table table-bordered table-striped table-hover table-sm\">\r\n                <caption>Terminal assess</caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>SN </th><th>Student</th>{this.state.subjects.map((subject, index) => <th key={index}>{subject.name}</th>)}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.gradestudents.map((student, key)=> \r\n                            <tr key = {key}>\r\n                                <td>{key+1}</td>\r\n                                <td>{student.student_name}</td>\r\n                                {this.state.subjects.map(\r\n                                    (subject, index) => \r\n                                    <td key={index}>\r\n                                        {this.state.results.map(\r\n                                            result=>(result.student == student.id && \r\n                                                result.subject == subject.id && \r\n                                                result.exam == this.state.examvalue)?\r\n                                                parseFloat(result.mark).toFixed(2):null)\r\n                                        }\r\n                                        {/* {parseFloat(this.state.results.find(\r\n                                            result=> result.student == student.id && \r\n                                                result.subject == subject.id && \r\n                                                result.exam == this.state.examvalue\r\n                                                ).mark).toFixed(2)\r\n                                        } */}\r\n                                    </td>\r\n                                )}\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n                <table className=\"table table-bordered table-striped table-hover table-sm\">\r\n                <caption>CAS assess</caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>SN </th><th>Student</th>{this.state.subjects.map((subject, index) => <th key={index}>{subject.name}</th>)}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.gradestudents.map((student, key)=> \r\n                            <tr key = {key}>\r\n                                <td>{key+1}</td>\r\n                                <td>{student.student_name}</td>\r\n                                {this.state.subjects.map(\r\n                                    (subject, index) => \r\n                                    <td key={index}>\r\n                                        {this.state.results.map(\r\n                                            result=>(result.student == student.id && \r\n                                                result.subject == subject.id && \r\n                                                result.exam == this.state.examvalue)?\r\n                                                parseFloat(result.cas).toFixed(2):null)\r\n                                        }\r\n                                    </td>\r\n                                )}\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"container\">\r\n                <nav className=\"navbar navbar-expand-md navbar-light bg-light my-2\">\r\n                    <div className=\"navbar-brand btn-group\">\r\n                        <button type=\"button\" className=\"btn btn-outline-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                {\r\n                                    (this.state.inputresultclicked)? 'Input marks ':(this.state.studnetresultclicked)?'Student marks ':(this.state.classmarksclicked)?'Class marks ':'Menu '\r\n                                }\r\n                        </button>\r\n                        <div className=\"dropdown-menu\">\r\n                            <button className=\"dropdown-item\"  onClick={this.input_result_clicked}>Input marks</button>\r\n                            <button className=\"dropdown-item\" onClick={this.class_marks_clicked}>Class marks</button>\r\n                            <button className=\"dropdown-item\" onClick={this.student_result_clicked}>Result</button>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText1\" aria-controls=\"navbarText1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarText1\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                                \r\n                        <li className=\"btn-group mx-2\">\r\n                            <span className=\"mx-2\">Grade</span>\r\n                            <select onChange={(e)=>this.grade_selected(e)} ref={this.gradeselectRef} className=\"form-control form-control-sm\" defaultValue=\"none\">\r\n                                <option value=\"none\" disabled hidden>Select an Option </option> \r\n                                {\r\n                                this.state.grades.map((items, key) => \r\n                                <option key={key} value={items.id}>{items.name}</option>\r\n                                )}\r\n                            </select>\r\n                        </li>\r\n                        <li className=\"btn-group mx-2\">\r\n                            <span className=\"mx-2\">Exam</span>\r\n                            <select onChange={(e)=>this.exam_selected(e)} ref={this.examselectRef}  className=\"form-control form-control-sm\" defaultValue=\"none\">\r\n                                <option value=\"none\" disabled hidden>Select an Option </option> \r\n                                {\r\n                                this.state.exams.map((items, key) => \r\n                                <option key={key} value={items.id}>{items.name}</option>\r\n                                )}\r\n                            </select>\r\n                        </li>\r\n                        {(this.state.examvalue)? (this.state.inputresultclicked && this.state.gradevalue)?subject_select:(this.state.studnetresultclicked)?student_select:null:null}\r\n                        \r\n                    </ul>\r\n                    </div>    \r\n                </nav>\r\n                </div>\r\n                {(this.state.inputresultclicked)? (this.state.subjectvalue)?result_form:null:(this.state.classmarksclicked && this.state.subjects.length != 0)?class_marks_diaplay:null}\r\n                {/* {(this.state.inputresultclicked)? (this.state.subjectvalue)?result_form:null:(this.state.studnetresultclicked && this.state.studentvalue)?student_result_display:(this.state.classmarksclicked && this.state.subjects.length != 0)?class_marks_diaplay:null} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","export const calculategrade = (marks) =>{\r\n    if(marks>=90 && marks<=100 ){\r\n        return {'grade':'A+','gpa': '4.0'}\r\n    }else if(marks>=80 && marks<=89 ){\r\n        return {'grade':'A','gpa': '3.6'}\r\n    }else if(marks>=70 && marks<=79 ){\r\n        return {'grade':'B+','gpa': '3.2'}\r\n    }else if(marks>=60 && marks<=69 ){\r\n        return {'grade':'B','gpa': '2.8'}\r\n    }else if(marks>=50 && marks<=59 ){\r\n        return {'grade':'C+','gpa': '2.4'}\r\n    }else if(marks>=40 && marks<=49 ){\r\n        return {'grade':'C','gpa': '2.0'}\r\n    }else if(marks>=30 && marks<=39 ){\r\n        return {'grade':'D+','gpa': '1.6'}\r\n    }else if(marks>=20 && marks<=29 ){\r\n        return {'grade':'D','gpa': '1.2'}\r\n    }else{\r\n        return {'grade':'E','gpa': \"0.8\"}\r\n    }   \r\n}","import React, { Component } from 'react';\r\nimport { toast, Slide } from 'react-toastify';\r\nimport {HOST} from './constants';\r\nimport {calculategrade} from './calculategrade';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch} from '@fortawesome/free-solid-svg-icons';\r\nimport schoolHeader from '../schoolHeader.jpg'\r\nclass StudentResult extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            exams:[],\r\n            students:[],\r\n            grades:[],\r\n            gradestudents:[],\r\n            graderesults:[],\r\n            gradesubjects:[],\r\n            studentresults:[],\r\n            studentresultsmulti1:[],\r\n            studentresultsmulti2:[],\r\n            studentresultsmulti3:[],\r\n            resultcomments:[],\r\n            examvalue:null,\r\n            examvaluemulti1:null,\r\n            examvaluemulti2:null,\r\n            examvaluemulti3:null,\r\n            gradevalue:null,\r\n            studentvalue:null,\r\n            classteacher:false,\r\n            studentresultclicked:true,\r\n            gradestudentresultclicked:false,\r\n            \r\n            finalreportclicked:false,\r\n            gradestudentfinalreportclicked:false,\r\n        };\r\n        this.gradeselectRef = React.createRef();\r\n        this.examselectRef = React.createRef();\r\n        this.examselectRef1 = React.createRef();\r\n        this.examselectRef2 = React.createRef();\r\n        this.examselectRef3 = React.createRef();\r\n        this.studentselectRef = React.createRef();\r\n        this.filterstudentsinputid = React.createRef();\r\n        this.filterstudentslist = React.createRef();\r\n    }\r\n\r\n    async get_grades(){\r\n        const header = await this.props.auth_headers();\r\n        await fetch(HOST+'/view-grades/', {\r\n            method: 'GET',\r\n            headers: header ,     \r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                  \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                this.setState({grades:data});\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n            });\r\n    }\r\n    async teacher_get_exams(){\r\n        const header = await this.props.auth_headers();\r\n        await fetch(HOST+'/teachers-view-exams/', {\r\n            method: 'GET',\r\n            headers: header ,\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                  \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                  \r\n                this.setState({exams:data});\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n    }\r\n    async get_all_students(){\r\n        const header = await this.props.auth_headers();\r\n        await fetch(HOST+'/get-all-students/', {\r\n            method: 'GET',\r\n            headers: header ,\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                  \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                  \r\n                this.setState({students:data});\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n    }\r\n\r\n    async get_student_result(student, exam, exammulti){\r\n        \r\n        const header = await this.props.auth_headers();\r\n        await fetch(HOST+'/get-student-result/'+student+'/'+exam+'/', {\r\n            method: 'GET',\r\n            headers: header ,\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                  \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                  \r\n                if(exammulti == 0){\r\n                    this.setState({studentresults:data});\r\n                }else if(exammulti == 1){\r\n                    this.setState({studentresultsmulti1:data});\r\n                }else if(exammulti == 2){\r\n                    this.setState({studentresultsmulti2:data});\r\n                }else if(exammulti == 3){\r\n                    this.setState({studentresultsmulti3:data});\r\n                }\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n    }\r\n\r\n    async get_subjects_by_grade(grade){\r\n        const header = await this.props.auth_headers();\r\n        await fetch(HOST+'/get-subjects-grade/'+grade+'/', {\r\n            method: 'GET',\r\n            headers: header ,\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                  \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                  \r\n                this.setState({gradesubjects:data});\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n    }\r\n    \r\n    async find_result_comment(exam){\r\n        const header = await this.props.auth_headers();\r\n        await fetch(HOST+'/get-exam-comment/'+exam+'/', {\r\n            method: 'GET',\r\n            headers: header ,\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                  \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                this.setState({resultcomments: data});\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n    }\r\n    async update_result_comment(e, student, exam){\r\n        let comment = e.target.value;\r\n        e.target.value = null;\r\n        if(!comment){\r\n            return\r\n        }\r\n        let header = await this.props.auth_headers();\r\n        header['Content-Type'] = 'application/json';\r\n        await fetch(HOST+'/update-result-comment/', {\r\n            method: 'POST',\r\n            headers: header ,\r\n            body:JSON.stringify({\r\n                'comment': comment,\r\n                'student': student,\r\n                'exam': exam,\r\n            }),\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                  \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                this.setState({resultcomments: data});\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n        \r\n    }\r\n    componentDidMount(){\r\n        this.get_grades();\r\n        this.teacher_get_exams();\r\n        this.get_all_students();\r\n    }\r\n\r\n    grade_selected(e){\r\n        this.setState({\r\n            gradevalue: e.target.value,\r\n            studentresults:[],\r\n            studentresultsmulti1:[],\r\n            studentresultsmulti2:[],\r\n            studentresultsmulti3:[],\r\n        });\r\n        if(this.state.gradestudentresultclicked || this.state.gradestudentfinalreportclicked){\r\n            this.get_subjects_by_grade(e.target.value);\r\n        }\r\n        if(this.examselectRef1.current){ this.examselectRef1.current.selectedIndex=0}\r\n        if(this.examselectRef2.current){ this.examselectRef2.current.selectedIndex=0}\r\n        if(this.examselectRef3.current){ this.examselectRef3.current.selectedIndex=0}\r\n\r\n    }\r\n\r\n    student_selected(e){\r\n        this.setState({\r\n            studentvalue: e.target.attributes.value.value,\r\n            studentresults:[],\r\n            studentresultsmulti1:[],\r\n            studentresultsmulti2:[],\r\n            studentresultsmulti3:[],\r\n        });\r\n        this.filterstudentsinputid.current.placeholder = this.state.students.find(std=>std.id == e.target.attributes.value.value).student_name;\r\n        if(this.examselectRef.current){\r\n            this.examselectRef.current.selectedIndex=0\r\n        }\r\n    }\r\n    filterStudents(e){\r\n        let filter = e.target.value.toUpperCase();\r\n        this.state.students.forEach(student=>{\r\n                if (student.student_name.toUpperCase().indexOf(filter) > -1) {\r\n                    this.filterstudentslist.current.childNodes.forEach((tr)=>\r\n                        {\r\n                            if(student.id == tr.attributes.value.value){\r\n                                tr.style.display = \"\"\r\n                            }\r\n                        }\r\n                      );\r\n                  } else {\r\n                      this.filterstudentslist.current.childNodes.forEach((tr)=>\r\n                        {\r\n                            if(student.id == tr.attributes.value.value){\r\n                                tr.style.display = \"none\"\r\n                            }\r\n                        } \r\n                      );\r\n                  }\r\n            }\r\n        );\r\n    }\r\n\r\n    exam_selected(e, exammulti){\r\n        if(exammulti == 0){\r\n            this.setState({\r\n                examvalue: e.target.value,\r\n                studentresults:[],\r\n                \r\n            });\r\n        }else if(exammulti == 1){\r\n            this.setState({\r\n                examvaluemulti1: e.target.value,\r\n                studentresultsmulti1:[],\r\n                \r\n            });\r\n        }else if(exammulti == 2){\r\n            this.setState({\r\n                examvaluemulti2: e.target.value,\r\n                studentresultsmulti2:[],\r\n                \r\n            });\r\n        }else if(exammulti == 3){\r\n            this.setState({\r\n                examvaluemulti3: e.target.value,\r\n                studentresultsmulti3:[],\r\n                \r\n            });\r\n        } \r\n        if(this.state.studentresultclicked || this.state.finalreportclicked){\r\n            let studentid =  this.state.studentvalue;\r\n            this.get_student_result(studentid, e.target.value, exammulti);\r\n            let studentgrade = this.state.students.find(std=>std.id==studentid).student_grade;\r\n            this.get_subjects_by_grade(studentgrade);\r\n        }\r\n        else if(this.state.gradestudentresultclicked || this.state.gradestudentfinalreportclicked){\r\n            // here filter students by grade.\r\n            let current_grade = this.state.gradevalue;\r\n            this.state.students.map((student, index)=>{\r\n                if(student.student_grade == current_grade){ \r\n                    this.get_student_result_calledbyall(student.id, e.target.value, 'results'+index+exammulti );\r\n                }\r\n            });\r\n        }\r\n        \r\n        this.find_result_comment(e.target.value);\r\n    }\r\n\r\n    student_result_clicked = () =>{\r\n        this.setState({\r\n            examvalue:null,\r\n            examvaluemulti1:null,\r\n            examvaluemulti2:null,\r\n            examvaluemulti3:null,\r\n            studentresultclicked:true,\r\n            gradevalue:null,\r\n            studentvalue:null,\r\n            gradestudentresultclicked:false,\r\n            finalreportclicked:false,\r\n            gradestudentfinalreportclicked:false,\r\n        });\r\n            if(this.gradeselectRef.current){\r\n                this.gradeselectRef.current.selectedIndex=0\r\n            }\r\n            if(this.examselectRef.current){\r\n                this.examselectRef.current.selectedIndex=0\r\n            }\r\n    }\r\n    grade_student_result_clicked = () =>{\r\n        this.setState({\r\n            gradevalue:null,\r\n            studentvalue:null,\r\n            examvalue:null,\r\n            examvaluemulti1:null,\r\n            examvaluemulti2:null,\r\n            examvaluemulti3:null,\r\n            studentresultclicked:false,\r\n            gradestudentresultclicked:true,\r\n            finalreportclicked:false,\r\n            gradestudentfinalreportclicked:false,\r\n        });\r\n            if(this.gradeselectRef.current){\r\n                this.gradeselectRef.current.selectedIndex=0\r\n            }\r\n            if(this.examselectRef.current){\r\n                this.examselectRef.current.selectedIndex=0\r\n            }\r\n            if(this.examselectRef.current){\r\n                this.examselectRef.current.selectedIndex=0\r\n            }\r\n    }\r\n    final_report_clicked=()=>{\r\n        this.setState({\r\n            // exams:[],\r\n            // students:[],\r\n            // grades:[],\r\n            gradestudents:[],\r\n            graderesults:[],\r\n            gradesubjects:[],\r\n            studentresults:[],\r\n            studentresultsmulti1:[],\r\n            studentresultsmulti2:[],\r\n            studentresultsmulti3:[],\r\n            resultcomments:[],\r\n            examvalue:null,\r\n            examvaluemulti1:null,\r\n            examvaluemulti2:null,\r\n            examvaluemulti3:null,\r\n            gradevalue:null,\r\n            studentvalue:null,\r\n            classteacher:false,\r\n            studentresultclicked:false,\r\n            gradestudentresultclicked:false,\r\n            \r\n            finalreportclicked:true,\r\n            gradestudentfinalreportclicked:false,\r\n        });\r\n    }\r\n    grade_student_final_report_clicked=()=>{\r\n        this.setState({\r\n            // exams:[],\r\n            // students:[],\r\n            // grades:[],\r\n            gradestudents:[],\r\n            graderesults:[],\r\n            gradesubjects:[],\r\n            studentresults:[],\r\n            studentresultsmulti1:[],\r\n            studentresultsmulti2:[],\r\n            studentresultsmulti3:[],\r\n            resultcomments:[],\r\n            examvalue:null,\r\n            examvaluemulti1:null,\r\n            examvaluemulti2:null,\r\n            examvaluemulti3:null,\r\n            gradevalue:null,\r\n            studentvalue:null,\r\n            classteacher:false,\r\n            studentresultclicked:false,\r\n            gradestudentresultclicked:false,\r\n            \r\n            finalreportclicked:false,\r\n            gradestudentfinalreportclicked:true,\r\n            \r\n        });\r\n    }\r\n\r\n    resultcomment=(student, exam)=>{\r\n        let val = this.state.resultcomments.find(\r\n            comment=> comment.student == student && comment.exam == exam\r\n        );\r\n        return (val)?val.result_comment:'';\r\n    }\r\n\r\n    async get_student_result_calledbyall(student, exam, index){\r\n        const header =await this.props.auth_headers();\r\n        // let payload = [];\r\n        await fetch(HOST+'/get-student-result/'+student+'/'+exam+'/', {\r\n            method: 'GET',\r\n            headers: header ,\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                  \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                  \r\n                // payload = data;\r\n                this.setState({\r\n                    [index]:data,\r\n                });\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n            // return payload;\r\n    }\r\n\r\n    async get_subjects_by_grade_calledbyall(grade, index){\r\n        const header =await this.props.auth_headers();\r\n        // const payload = [];\r\n        await fetch(HOST+'/get-subjects-grade/'+grade+'/', {\r\n            method: 'GET',\r\n            headers: header ,\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                  \r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                  \r\n                // payload = data;\r\n                this.setState({\r\n                    [index]:data,\r\n                });\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n                  \r\n            });\r\n            // return payload;\r\n    }\r\n    result_table(){\r\n        if(this.state.gradestudentresultclicked){\r\n            // all students of grade\r\n            let exam = this.state.examvalue;\r\n            if(exam){\r\n                let exam_title = this.state.exams.find(item=> item.id == exam).name;\r\n                let students = this.state.students;\r\n                let payload = [];\r\n                let results = [];\r\n                let current_grade = this.state.gradevalue;\r\n                students.map((student, index)=>{\r\n                    if(student.student_grade == current_grade){\r\n                        \r\n                    const stateindex = 'results'+index+0;\r\n                    results[index] = this.state[stateindex];\r\n                    let cgpa = [];\r\n                    let count = 0;\r\n                                    \r\n                    let data = <div className=\"container mt-2\" key={index}>\r\n                        <div className=\"container result\">\r\n                        <div><img src={schoolHeader} /></div>\r\n                    <div><h3>Exam Report: {exam_title}</h3></div>\r\n                    <table className=\"table table-bordered table-striped table-hover table-sm\">\r\n                    <tbody>\r\n                        <tr><td colSpan=\"5\">Name: {student.student_name}</td>\r\n                            <td colSpan=\"2\">Class: {this.state.grades.find(grade=>grade.id == student.student_grade).name}</td>\r\n                            <td>Class Teacher Remarks</td>\r\n                        </tr>\r\n                        <tr><td>SN</td><td>Subjects</td><td>Theory</td><td>Practical</td><td>Total</td><td>GPA</td><td>Grade</td>\r\n                            <td rowSpan=\"0\" >{\r\n                                (this.state.grades.find(grade=>grade.classteacher == this.props.userid))?\r\n                                <textarea rows=\"4\" placeholder={this.resultcomment(student.id, exam)} className=\"form-control form-control-sm\" onBlur={(e)=>this.update_result_comment(e, student.id, exam)}/>\r\n                                : this.resultcomment(student.id, exam)\r\n                            }</td>\r\n                        </tr>\r\n                        {(results[index])?results[index].map((result,ind)=>{\r\n                            if(this.state.gradesubjects.find(subject=> subject.id==result.subject)){\r\n                                let theory = Math.round(0.6*parseFloat(result.mark));\r\n                                let practical = Math.round( 0.4*parseFloat(result.cas));\r\n                                let total = theory +practical;\r\n                                let gpa = calculategrade(total);\r\n                                cgpa.push(gpa.gpa);\r\n                                (ind)?count+=1:count=1;\r\n                                return <tr key={ind}>\r\n                                    <td>{ind+1}</td>\r\n                                    {/* Correct here and in home class mark display map */}\r\n                                    <td>{this.state.gradesubjects.map(subject=> (subject.id == result.subject)?subject.name:null)}</td>\r\n                                    <td>{theory}</td><td>{practical}</td><td>{total}</td><td>{gpa.gpa}</td><td>{gpa.grade}</td>\r\n                                    </tr>\r\n                                }\r\n                            }):null\r\n                        }\r\n                        </tbody>\r\n                        <tfoot>\r\n                        <tr><td colSpan=\"5\"></td><th colSpan=\"2\">GPA: {(!cgpa.length)?\"N/A\":(cgpa.reduce((sum, gpa) => (gpa != 'FAIL')? sum + parseFloat(gpa): sum, 0)/cgpa.length).toFixed(2)}</th><td></td></tr>\r\n                        </tfoot>\r\n                    </table>\r\n                        <div className=\"row signature-div\">\r\n                            <div className=\"col-md-6 d-flex justify-content-end\">\r\n                                <b className=\"signature\">Class Teacher</b>\r\n                            </div>\r\n                            <div className=\"col-md-6 d-flex justify-content-center\">\r\n                                <b className=\"signature\">Principal</b>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    payload.push(data);\r\n                    }\r\n                });\r\n                return payload;\r\n            }\r\n        }else{\r\n            // single student\r\n            let exam = this.state.examvalue;\r\n            if(exam){\r\n                let exam_title = this.state.exams.find(item=> item.id == exam).name;\r\n                let students = this.state.students;\r\n                let studentselected = this.state.studentvalue;\r\n                let student = students.find(std => std.id == studentselected);\r\n                let results = this.state.studentresults;\r\n                let gradesubjects = this.state.gradesubjects;\r\n                let cgpa = [];\r\n                let count = 0;\r\n                                \r\n                return (<div className=\"container mt-2\"><div className=\"container result\">\r\n                    <div><img src={schoolHeader} /></div>\r\n                    <div><h3>Exam Report: {exam_title}</h3></div>\r\n                <table className=\"table table-bordered table-striped table-hover table-sm\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td colSpan=\"5\">Name: {student.student_name}</td>\r\n                            <td colSpan=\"2\">Class: {this.state.grades.find(grade=>grade.id == student.student_grade).name}</td>\r\n                            <td>Class Teacher Remarks</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>SN</td>\r\n                            <td>Subjects</td>\r\n                            <td>Theory</td>\r\n                            <td>Practical</td>\r\n                            <td>Total</td>\r\n                            <td>GPA</td>\r\n                            <td>Grade</td>\r\n                            <td rowSpan=\"0\" >{\r\n                                (this.state.grades.find(grade=>grade.classteacher == this.props.userid))?\r\n                                <textarea rows=\"4\" placeholder={this.resultcomment(student.id, exam)} className=\"form-control form-control-sm\" onBlur={(e)=>this.update_result_comment(e, student.id, exam)}/>\r\n                                : this.resultcomment(student.id, exam)\r\n                            }</td>\r\n                        </tr>\r\n                        {\r\n                            (results.length>0)?results.map((result,index)=>{\r\n                                if(gradesubjects.find(subject=> subject.id==result.subject)){\r\n                                    let theory = Math.round(0.6*parseFloat(result.mark));\r\n                                    let practical = Math.round( 0.4*parseFloat(result.cas));\r\n                                    let total = theory +practical;\r\n                                    let gpa = calculategrade(total);\r\n                                    cgpa.push(gpa.gpa);\r\n                                    (index)?count+=1:count=1;\r\n                                    return <tr key={index}>\r\n                                        <td>{count}</td>\r\n                                        {/* Correct here and in home class mark display map */}\r\n                                        <td>{gradesubjects.map(subject=> (subject.id == result.subject)?subject.name:null)}</td>\r\n                                        <td>{theory}</td>\r\n                                        <td>{practical}</td>\r\n                                        <td>{total}</td>\r\n                                        <td>{gpa.gpa}</td>\r\n                                        <td>{gpa.grade}</td>\r\n\r\n                                    </tr>\r\n                                }\r\n                            }\r\n                            ):null          \r\n                        }\r\n                    </tbody>\r\n                    <tfoot>\r\n                    <tr><td colSpan=\"5\"></td><th colSpan=\"2\">GPA: {(!cgpa.length)?\"N/A\":(cgpa.reduce((sum, gpa) => (gpa != 'FAIL')? sum + parseFloat(gpa): sum, 0)/cgpa.length).toFixed(2)}</th><td></td></tr>\r\n                    </tfoot>\r\n                </table>\r\n                    <div className=\"row signature-div\">\r\n                        <div className=\"col-md-6 d-flex justify-content-end\">\r\n                            <b className=\"signature\">Class Teacher</b>\r\n                        </div>\r\n                        <div className=\"col-md-6 d-flex justify-content-center\">\r\n                            <b className=\"signature\">Principal</b>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                );\r\n            }\r\n        }\r\n        \r\n    }\r\n    student_report_table(){\r\n        let exam1 = this.state.examvaluemulti1;\r\n        let exam2 = this.state.examvaluemulti2;\r\n        let exam3 = this.state.examvaluemulti3;\r\n        if(exam1 && exam2 && exam3){\r\n            let gradesubjects = this.state.gradesubjects;\r\n            let results1 = this.state.studentresultsmulti1;\r\n            let results2 = this.state.studentresultsmulti2;\r\n            let results3 = this.state.studentresultsmulti3;\r\n            let students = this.state.students;\r\n            let studentselected = this.state.studentvalue;\r\n            let student = students.find(std => std.id == studentselected);\r\n            let cgpa = [];\r\n            let count = 0;\r\n            \r\n            return <div className=\"container\">\r\n                <div className=\"report\">\r\n                <div><img src={schoolHeader} /></div>\r\n                    <div><h3>Progress Report</h3></div>\r\n                    <div className=\"row text-left\">\r\n                        <div className=\"col-md-5\" ><b className=\"mx-4\">Name:{student.student_name}</b></div>\r\n                        <div className=\"col-md-6\"><b  className=\"mx-4\">Grade:{this.state.grades.find(grade=>grade.id == student.student_grade).name}</b></div>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <table className=\"table table-bordered table-sm\">\r\n                            <tbody>\r\n                                <tr><td rowSpan=\"2\">Subjects</td><td>1ST TERM</td><td>2ND TERM</td><td>3RD TERM</td><td>AVERAGE</td><td rowSpan=\"2\">GPA</td><td rowSpan=\"2\">GRADE</td></tr>\r\n                                <tr><td>20%</td><td>30%</td><td>50%</td><td>100%</td></tr>\r\n                                {\r\n                                    gradesubjects.map(subject=>{\r\n                                        let res1 = results1.find(res=> res.student == student.id && res.subject == subject.id);\r\n                                        let res2 = results2.find(res=> res.student == student.id && res.subject == subject.id); \r\n                                        let res3 = results3.find(res=> res.student == student.id && res.subject == subject.id);\r\n                                        if(!res1) res1= {};\r\n                                        if(!res2) res2= {};\r\n                                        if(!res3) res3= {};\r\n                                        let mark1 = Math.round(0.6*parseFloat(res1.mark)) + Math.round( 0.4*parseFloat(res1.cas));\r\n                                        let mark2 = Math.round(0.6*parseFloat(res2.mark)) + Math.round( 0.4*parseFloat(res2.cas));\r\n                                        let mark3 = Math.round(0.6*parseFloat(res3.mark)) + Math.round( 0.4*parseFloat(res3.cas));\r\n                                        let mark20 = Math.round(0.2*mark1);\r\n                                        let mark30 = Math.round(0.3*mark2);\r\n                                        let mark50 = Math.round(0.5*mark3);\r\n                                        let marksum = mark20 + mark30 + mark50;\r\n                                        let gpa = calculategrade(marksum);\r\n                                        cgpa.push(gpa.gpa);\r\n                                        return <tr>\r\n                                            <td>{subject.name}</td>\r\n                                            <td>{mark20.toString()}</td>\r\n                                            <td>{mark30.toString()}</td>\r\n                                            <td>{mark50.toString()}</td>\r\n                                            <td>{marksum.toString()}</td>\r\n                                            <td>{gpa.gpa}</td>\r\n                                            <td>{gpa.grade}</td>\r\n\r\n                                        </tr>\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 d-flex justify-content-center \">\r\n                            <table className=\"table table-sm col-md-6 grade_to_gpa\">\r\n                                <tbody>\r\n                                    <tr><td>Grade</td><td>GPA</td></tr>\r\n                                    <tr><td>A+</td><td>Outstanding 4.0</td></tr>\r\n                                    <tr><td>A</td><td>Excellent 3.6</td></tr>\r\n                                    <tr><td>B+</td><td>Very Good 3.2</td></tr>\r\n                                    <tr><td>B</td><td>Good 2.8</td></tr>\r\n                                    <tr><td>C+</td><td>Satisfactory 2.4</td></tr>\r\n                                    <tr><td>C</td><td>Acceptable 2.0</td></tr>\r\n                                    <tr><td>D+</td><td>Partially Acceptable 1.6</td></tr>\r\n                                    <tr><td>D</td><td>Insufficient 1.2</td></tr>\r\n                                    <tr><td>E</td><td>Very Insufficient 0.8</td></tr>\r\n                                </tbody>\r\n                            </table>\r\n                            \r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div><b>GPA: {(!cgpa.length)?\"N/A\":(cgpa.reduce((sum, gpa) => (gpa != 'FAIL')? sum + parseFloat(gpa): sum, 0)/cgpa.length).toFixed(2)}</b></div>\r\n                            <div className=\"row signature-div\">\r\n                                <span className=\"col-md-6\"><b className=\"signature\">Class Teacher</b></span>\r\n                                <span className=\"col-md-6\"><b className=\"signature\">Principal</b></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        }\r\n    }\r\n    grade_student_report_table(){\r\n        let exam1 = this.state.examvaluemulti1;\r\n        let exam2 = this.state.examvaluemulti2;\r\n        let exam3 = this.state.examvaluemulti3;\r\n        if(exam1 && exam2 && exam3){\r\n            let gradesubjects = this.state.gradesubjects;\r\n            let students = this.state.students;\r\n            let payload = [];\r\n            let current_grade = this.state.gradevalue;\r\n                \r\n            students.map((student, index)=>{\r\n                if(student.student_grade == current_grade){\r\n                let cgpa = [];\r\n                \r\n                let data = <div className=\"container mt-2\" key={index}>\r\n                <div className=\"report\">\r\n                <div><img src={schoolHeader} /></div>\r\n                    <div><h3>Progress Report</h3></div>\r\n                    <div className=\"row text-left\">\r\n                        <div className=\"col-md-5\" ><b className=\"mx-4\">Name:{student.student_name}</b></div>\r\n                        <div className=\"col-md-6\"><b  className=\"mx-4\">Grade:{this.state.grades.find(grade=>grade.id == student.student_grade).name}</b></div>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <table className=\"table table-bordered table-sm\">\r\n                            <tbody>\r\n                                <tr><td rowSpan=\"2\">Subjects</td><td>1ST TERM</td><td>2ND TERM</td><td>3RD TERM</td><td>AVERAGE</td><td rowSpan=\"2\">GPA</td><td rowSpan=\"2\">GRADE</td></tr>\r\n                                <tr><td>20%</td><td>30%</td><td>50%</td><td>100%</td></tr>\r\n                                {\r\n                                    gradesubjects.map((subject, ind)=>{\r\n                                        const stateindex1 = 'results'+index+1;\r\n                                        const stateindex2 = 'results'+index+2;\r\n                                        const stateindex3 = 'results'+index+3;\r\n                                        \r\n                                        if (this.state[stateindex1] && this.state[stateindex2] && this.state[stateindex3]){\r\n                                            let res1 = this.state[stateindex1].find(res=> res.student == student.id && res.subject == subject.id);\r\n                                            let res2 = this.state[stateindex2].find(res=> res.student == student.id && res.subject == subject.id); \r\n                                            let res3 = this.state[stateindex3].find(res=> res.student == student.id && res.subject == subject.id);\r\n                                            \r\n                                            if(!res1) res1= {};\r\n                                            if(!res2) res2= {};\r\n                                            if(!res3) res3= {};\r\n                                            let mark1 = Math.round(0.6*parseFloat(res1.mark)) + Math.round( 0.4*parseFloat(res1.cas));\r\n                                            let mark2 = Math.round(0.6*parseFloat(res2.mark)) + Math.round( 0.4*parseFloat(res2.cas));\r\n                                            let mark3 = Math.round(0.6*parseFloat(res3.mark)) + Math.round( 0.4*parseFloat(res3.cas));\r\n                                            let mark20 = Math.round(0.2*mark1);\r\n                                            let mark30 = Math.round(0.3*mark2);\r\n                                            let mark50 = Math.round(0.5*mark3);\r\n                                            let marksum = mark20 + mark30 + mark50;\r\n                                            let gpa = calculategrade(marksum);\r\n                                            cgpa.push(gpa.gpa);\r\n                                            return <tr key={ind}>\r\n                                                <td>{subject.name}</td>\r\n                                                <td>{mark20.toString()}</td>\r\n                                                <td>{mark30.toString()}</td>\r\n                                                <td>{mark50.toString()}</td>\r\n                                                <td>{marksum.toString()}</td>\r\n                                                <td>{gpa.gpa}</td>\r\n                                                <td>{gpa.grade}</td>\r\n\r\n                                            </tr>\r\n                                        }\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 d-flex justify-content-center \">\r\n                            <table className=\"table table-sm col-md-6 grade_to_gpa\">\r\n                                <tbody>\r\n                                    <tr><td>Grade</td><td>GPA</td></tr>\r\n                                    <tr><td>A+</td><td>Outstanding 4.0</td></tr>\r\n                                    <tr><td>A</td><td>Excellent 3.6</td></tr>\r\n                                    <tr><td>B+</td><td>Very Good 3.2</td></tr>\r\n                                    <tr><td>B</td><td>Good 2.8</td></tr>\r\n                                    <tr><td>C+</td><td>Satisfactory 2.4</td></tr>\r\n                                    <tr><td>C</td><td>Acceptable 2.0</td></tr>\r\n                                    <tr><td>D+</td><td>Partially Acceptable 1.6</td></tr>\r\n                                    <tr><td>D</td><td>Insufficient 1.2</td></tr>\r\n                                    <tr><td>E</td><td>Very Insufficient 0.8</td></tr>\r\n                                </tbody>\r\n                            </table>\r\n                            \r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div><b>GPA: {(!cgpa.length)?\"N/A\":(cgpa.reduce((sum, gpa) => (gpa != 'FAIL')? sum + parseFloat(gpa): sum, 0)/cgpa.length).toFixed(2)}</b></div>\r\n                            <div className=\"row signature-div\">\r\n                                <span className=\"col-md-6\"><b className=\"signature\">Class Teacher</b></span>\r\n                                <span className=\"col-md-6\"><b className=\"signature\">Principal</b></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                payload.push(data);\r\n                }\r\n            });\r\n            return payload;\r\n        }\r\n    }\r\n    render(){\r\n        let grade_select = <li className=\"btn-group mx-2 my-auto\">\r\n                <span className=\"my-auto\">Grade</span>\r\n                <select onChange={(e)=>this.grade_selected(e)} ref={this.gradeselectRef} className=\"form-control form-control-sm my-auto\" defaultValue=\"none\">\r\n                    <option value=\"none\" disabled hidden>Select an Option </option> \r\n                    {\r\n                    this.state.grades.map((items, key) => \r\n                    <option key={key} value={items.id}>{items.name}</option>\r\n                    )}\r\n                </select>\r\n                </li>\r\n                        \r\n\r\n        let student_select = <li className=\"btn-group mx-auto my-auto\">\r\n                <span className=\"my-auto\">Student</span>\r\n                <div className=\"form-inline input-group dropdown mx-2\">\r\n                        <input type=\"text\" className=\"form-control dropdown-toggle form-control-sm my-auto\" \r\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" placeholder=\"Search Student\"\r\n                        onKeyUp={(e)=>this.filterStudents(e)} ref={this.filterstudentsinputid} />\r\n                        <span className=\"input-group-text form-control-sm\" disabled><FontAwesomeIcon icon={faSearch} /></span>\r\n                        <div  className=\"dropdown-menu overflow-auto\" style={{height: 200 + 'px'}} >\r\n                            <table className=\"table table-bordered table-striped table-hover table-sm\">\r\n                                <thead><tr><td>Students Name</td></tr></thead>\r\n                                <tbody ref = {this.filterstudentslist}>{\r\n                                this.state.students.map((items, key) => \r\n                                <tr key={key} value={items.id}><td onClick={ (e)=>this.student_selected(e)} value={items.id}>{items.student_name}</td></tr>\r\n                                )\r\n                                }</tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n        let exam_select = <li className=\"btn-group mx-2\" key=\"es0\">\r\n                <span className=\"mx-2\">Exam</span>\r\n                <select onChange={(e)=>this.exam_selected(e, 0)} ref={this.examselectRef}  className=\"form-control form-control-sm\" defaultValue=\"none\">\r\n                    <option value=\"none\" disabled hidden>Select an Option </option> \r\n                    {\r\n                    this.state.exams.map((items, key) => \r\n                    <option key={key} value={items.id}>{items.name}</option>\r\n                    )}\r\n                </select>\r\n                </li>\r\n        let exam_select_multi1 = <li className=\"form-group mx-1\" key=\"es1\">\r\n        <span className=\"mx-1\">1st Term</span>\r\n        <select onChange={(e)=>this.exam_selected(e, 1)} ref={this.examselectRef1}  className=\"form-control form-control-sm\" defaultValue=\"none\">\r\n            <option value=\"none\" disabled hidden>Select an Option </option> \r\n            {\r\n            this.state.exams.map((items, key) => \r\n            (items.exam_term == '1st')?<option key={key} value={items.id}>{items.name}</option>:null\r\n            )}\r\n        </select>\r\n        </li>\r\n        \r\n        let exam_select_multi2 = <li className=\"form-group mx-1\" key=\"es2\">\r\n        <span className=\"mx-1\">2nd Term</span>\r\n        <select onChange={(e)=>this.exam_selected(e, 2)} ref={this.examselectRef2}  className=\"form-control form-control-sm\" defaultValue=\"none\">\r\n            <option value=\"none\" disabled hidden>Select an Option </option> \r\n            {\r\n            this.state.exams.map((items, key) => \r\n            (items.exam_term == '2nd')?<option key={key} value={items.id}>{items.name}</option>:null\r\n            )}\r\n        </select>\r\n        </li>\r\n        let exam_select_multi3 = <li className=\"form-group mx-1\" key=\"es3\">\r\n        <span className=\"mx-1\">3rd Term</span>\r\n        <select onChange={(e)=>this.exam_selected(e, 3)} ref={this.examselectRef3}  className=\"form-control form-control-sm\" defaultValue=\"none\">\r\n            <option value=\"none\" disabled hidden>Select an Option </option> \r\n            {\r\n            this.state.exams.map((items, key) => \r\n            (items.exam_term == '3rd')?<option key={key} value={items.id}>{items.name}</option>:null\r\n            )}\r\n        </select>\r\n        </li>\r\n\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"container\">\r\n                <nav className=\"navbar navbar-expand-md navbar-light bg-light my-2\">\r\n                    <div className=\"navbar-brand btn-group\">\r\n                        <button type=\"button\" className=\"btn btn-outline-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            {\r\n                                (this.state.studentresultclicked)?'Student result ':(this.state.gradestudentresultclicked)?'Grade all students result ':(this.state.finalreportclicked)?'Final Report ':(this.state.gradestudentfinalreportclicked)?'Grade all students Final report ':'Menu '\r\n                            }\r\n                        </button>\r\n                        <div className=\"dropdown-menu\">\r\n                            <button className=\"dropdown-item\" onClick={this.student_result_clicked}>Student result</button>\r\n                            <button className=\"dropdown-item\" onClick={this.grade_student_result_clicked}>Grade all student result</button>\r\n                            <button className=\"dropdown-item\" onClick={this.final_report_clicked}>Final report</button>\r\n                            <button className=\"dropdown-item\" onClick={this.grade_student_final_report_clicked}>Grade all students Final report</button>\r\n                            <button className=\"dropdown-item\" onClick={this.props.show_home}>Go to marks input form</button>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText1\" aria-controls=\"navbarText1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarText1\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            {(this.state.gradestudentresultclicked || this.state.gradestudentfinalreportclicked)?grade_select:null}\r\n                            {(this.state.gradestudentresultclicked && this.state.gradevalue)?exam_select:null}\r\n                            {(this.state.gradestudentfinalreportclicked && this.state.gradevalue)?[exam_select_multi1, exam_select_multi2, exam_select_multi3]:null}\r\n                            {(this.state.studentresultclicked || this.state.finalreportclicked)?student_select:null}\r\n                            {(this.state.studentresultclicked && this.state.studentvalue)?exam_select:null}\r\n                            {(this.state.finalreportclicked && this.state.studentvalue)?[exam_select_multi1, exam_select_multi2, exam_select_multi3]:null}\r\n                        </ul>\r\n                    </div>    \r\n                </nav>\r\n            </div>\r\n            {(this.state.studentresultclicked || this.state.gradestudentresultclicked)?this.result_table():null}\r\n            {(this.state.finalreportclicked)?this.student_report_table():null}\r\n            {(this.state.gradestudentfinalreportclicked)?this.grade_student_report_table():null}\r\n        </div>\r\n            )\r\n    }\r\n}\r\n\r\nclass AllStudentResult extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n\r\n        return <div></div>\r\n    }\r\n}\r\n\r\n\r\nexport default StudentResult;","import React, { Component } from \"react\";\r\nimport { toast} from 'react-toastify';\r\nimport {HOST} from './constants';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport CSVReader from 'react-csv-reader';\r\n\r\nexport default class AdminInput extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            teachers:[],\r\n            grades:[],\r\n            students:[],\r\n            subjects:[],\r\n            studentsubject:[],\r\n            studentvalue:'',\r\n            display:0,\r\n            jsonfromcsv:[],\r\n        };\r\n        this.gradeselectRef = React.createRef();\r\n        this.filterstudentslist = React.createRef();\r\n        this.filterstudentsinputid = React.createRef();\r\n        \r\n    }\r\n    componentDidMount(){\r\n        this.get_all_teacher_grades_students_subjects_studentsubject();\r\n    }\r\n    async get_all_teacher_grades_students_subjects_studentsubject(){\r\n        const header = await this.props.auth_headers();\r\n        await fetch(HOST+'/get_all_teacher_grades_students_subjects_studentsubject/', {\r\n            method: 'GET',\r\n            headers: header ,\r\n            })\r\n            .then(res => {\r\n                if(res.status == 400){\r\n                    toast.error('Bad Request');\r\n                    return\r\n                }\r\n                if(res.status == 401){\r\n                    toast.error('Unauthorized');\r\n                    return\r\n                }\r\n                if(res.status == 403){\r\n                    toast.error('Forbidden');\r\n                    return\r\n                }\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                this.setState({\r\n                    teachers:data.users,\r\n                    grades:data.grades,\r\n                    students:data.students,\r\n                    subjects:data.subjects,\r\n                    studentsubject:data.studentsubject,\r\n                });\r\n            }).catch(function(error) {\r\n                toast.error(\"Something went Wrong!\");\r\n            });\r\n    }\r\n    \r\n    edit_student_clicked = () => {\r\n        this.setState({\r\n            display:1,\r\n        })\r\n    }\r\n    edit_student_subject_clicked = () => {\r\n        this.setState({\r\n            display:2,\r\n        })\r\n    }\r\n    import_from_csv = () => {\r\n        this.setState({\r\n            display:3,\r\n        })\r\n    }\r\n    student_selected(e){\r\n        let target = e.target;\r\n        let value = target.attributes.value.value;\r\n        this.setState({\r\n            studentvalue: value,\r\n        });\r\n        this.addStudentToSubject(target, value);\r\n        this.filterstudentsinputid.current.placeholder = this.state.students.find(std=>std.id == value).student_name;\r\n    }\r\n    filterStudents(e){\r\n        let target = e.target;\r\n        let filter = target.value.toUpperCase();\r\n        let filterstudentslist = target.nextElementSibling.nextElementSibling.childNodes[0].childNodes[1].childNodes;\r\n        this.state.students.forEach(student=>{\r\n                if (student.student_name.toUpperCase().indexOf(filter) > -1) {\r\n                    filterstudentslist.forEach((tr)=>\r\n                        {\r\n                            if(student.id == tr.attributes.value.value){\r\n                                tr.style.display = \"\"\r\n                            }\r\n                        }\r\n                      );\r\n                  } else {\r\n                      filterstudentslist.forEach((tr)=>\r\n                        {\r\n                            if(student.id == tr.attributes.value.value){\r\n                                tr.style.display = \"none\"\r\n                            }\r\n                        } \r\n                      );\r\n                  }\r\n            }\r\n        );\r\n    }\r\n    async addStudentToSubject(event, subject){\r\n        let target = event.target;\r\n        let value = target.attributes.value.value;\r\n        this.setState({\r\n            studentvalue: value,\r\n        });\r\n        this.filterstudentsinputid.current.placeholder = this.state.students.find(std=>std.id == value).student_name;\r\n        if (value == ''){\r\n            return\r\n        }\r\n        // event.target.value = null;\r\n        let header = await this.props.auth_headers();\r\n        header['Content-Type'] = 'application/json';\r\n        await fetch(HOST+'/addStudentToSubject/', {\r\n            method: 'POST', headers: header , body:JSON.stringify({\r\n                'student': value,\r\n                'subject': subject,\r\n                }),\r\n            })\r\n            .then(res => { if(res.status == 400){toast.error('Bad Request');return}\r\n                if(res.status == 401){toast.error('Unauthorized');return}\r\n                if(res.status == 403){toast.error('Forbidden');return}\r\n                return res.json();\r\n            })\r\n            .then((data) => {this.setState({studentsubject:data});\r\n            }).catch(function(error) {toast.error(\"Something went Wrong!\");});\r\n    }\r\n    async deleteStudentFromSubject(student, subject){\r\n        \r\n        // event.target.value = null;\r\n        let header = await this.props.auth_headers();\r\n        header['Content-Type'] = 'application/json';\r\n        await fetch(HOST+'/deleteStudentFromSubject/', {\r\n            method: 'POST', headers: header , body:JSON.stringify({\r\n                'student': student,\r\n                'subject': subject,\r\n                }),\r\n            })\r\n            .then(res => { if(res.status == 400){toast.error('Bad Request');return}\r\n                if(res.status == 401){toast.error('Unauthorized');return}\r\n                if(res.status == 403){toast.error('Forbidden');return}\r\n                return res.json();\r\n            })\r\n            .then((data) => {this.setState({studentsubject:data});\r\n            }).catch(function(error) {toast.error(\"Something went Wrong!\");});\r\n    }\r\n\r\n    async updateStudentName(event, student){\r\n        let value = event.target.value;\r\n        if (value == ''){\r\n            return\r\n        }\r\n        event.target.value = null;\r\n        let header = await this.props.auth_headers();\r\n        header['Content-Type'] = 'application/json';\r\n        await fetch(HOST+'/updateStudentName/', {\r\n            method: 'POST', headers: header , body:JSON.stringify({\r\n                'student_name': value,\r\n                'student': student,\r\n                }),\r\n            })\r\n            .then(res => { if(res.status == 400){toast.error('Bad Request');return}\r\n                if(res.status == 401){toast.error('Unauthorized');return}\r\n                if(res.status == 403){toast.error('Forbidden');return}\r\n                return res.json();\r\n            })\r\n            .then((data) => {this.setState({students:data});\r\n            }).catch(function(error) {toast.error(\"Something went Wrong!\");});\r\n    }\r\n    async updateStudentPhone(event, student){\r\n        let value = event.target.value;\r\n        if (value == ''){\r\n            return\r\n        }\r\n        event.target.value = null;\r\n        let header = await this.props.auth_headers();\r\n        header['Content-Type'] = 'application/json';\r\n        await fetch(HOST+'/updateStudentPhone/', {\r\n            method: 'POST', headers: header , body:JSON.stringify({\r\n                'phone': value,\r\n                'student': student,\r\n                }),\r\n            })\r\n            .then(res => { if(res.status == 400){toast.error('Bad Request');return}\r\n                if(res.status == 401){toast.error('Unauthorized');return}\r\n                if(res.status == 403){toast.error('Forbidden');return}\r\n                return res.json();\r\n            })\r\n            .then((data) => {this.setState({students:data});\r\n            }).catch(function(error) {toast.error(\"Something went Wrong!\");});\r\n\r\n    }\r\n    async updateStudentAddress(event, student){\r\n        let value = event.target.value;\r\n        if (value == ''){\r\n            return\r\n        }\r\n        event.target.value = null;\r\n        let header = await this.props.auth_headers();\r\n        header['Content-Type'] = 'application/json';\r\n        await fetch(HOST+'/updateStudentAddress/', {\r\n            method: 'POST', headers: header , body:JSON.stringify({\r\n                'address': value,\r\n                'student': student,\r\n                }),\r\n            })\r\n            .then(res => { if(res.status == 400){toast.error('Bad Request');return}\r\n                if(res.status == 401){toast.error('Unauthorized');return}\r\n                if(res.status == 403){toast.error('Forbidden');return}\r\n                return res.json();\r\n            })\r\n            .then((data) => {this.setState({students:data});\r\n            }).catch(function(error) {toast.error(\"Something went Wrong!\");});\r\n\r\n    }\r\n    async updateStudentDOB(event, student){\r\n        let value = event.target.value;\r\n        if (value == ''){\r\n            return\r\n        }\r\n        event.target.value = null;\r\n        let header = await this.props.auth_headers();\r\n        header['Content-Type'] = 'application/json';\r\n        await fetch(HOST+'/updateStudentDOB/', {\r\n            method: 'POST', headers: header , body:JSON.stringify({\r\n                'date_of_birth': value,\r\n                'student': student,\r\n                }),\r\n            })\r\n            .then(res => { if(res.status == 400){toast.error('Bad Request');return}\r\n                if(res.status == 401){toast.error('Unauthorized');return}\r\n                if(res.status == 403){toast.error('Forbidden');return}\r\n                return res.json();\r\n            })\r\n            .then((data) => {this.setState({students:data});\r\n            }).catch(function(error) {toast.error(\"Something went Wrong!\");});\r\n\r\n    }\r\n    async updateStudentGrade(event, student){\r\n        let target = event.target;\r\n        let value = target.value;\r\n        if (value == 'none'){\r\n            return\r\n        }\r\n        event.target.value = value;\r\n        let header = await this.props.auth_headers();\r\n        header['Content-Type'] = 'application/json';\r\n        await fetch(HOST+'/updateStudentGrade/', {\r\n            method: 'POST', headers: header , body:JSON.stringify({\r\n                'student_grade': value,\r\n                'student': student,\r\n                }),\r\n            })\r\n            .then(res => { if(res.status == 400){toast.error('Bad Request');return}\r\n                if(res.status == 401){toast.error('Unauthorized');return}\r\n                if(res.status == 403){toast.error('Forbidden');return}\r\n                return res.json();\r\n            })\r\n            .then((data) => {this.setState({students:data});\r\n            }).catch(function(error) {toast.error(\"Something went Wrong!\");});\r\n\r\n    }\r\n    async updateSubjectTeacher(event, subject){\r\n        let target = event.target;\r\n        let value = target.value;\r\n        if (value == 'none'){\r\n            return\r\n        }\r\n        event.target.value = value;\r\n        let header = await this.props.auth_headers();\r\n        header['Content-Type'] = 'application/json';\r\n        await fetch(HOST+'/updateSubjectTeacher/', {\r\n            method: 'POST', headers: header , body:JSON.stringify({\r\n                'teacher': value,\r\n                'subject': subject,\r\n                }),\r\n            })\r\n            .then(res => { if(res.status == 400){toast.error('Bad Request');return}\r\n                if(res.status == 401){toast.error('Unauthorized');return}\r\n                if(res.status == 403){toast.error('Forbidden');return}\r\n                return res.json();\r\n            })\r\n            .then((data) => {this.setState({subjects:data});\r\n            }).catch(function(error) {toast.error(\"Something went Wrong!\");});\r\n\r\n    }\r\n    async uploadStudentInformation(){\r\n        let header = await this.props.auth_headers();\r\n        header['Content-Type'] = 'application/json';\r\n        toast.info('Please Wait. This may take some time.', {autoClose:false, toastId:'studentuploadinfo'})\r\n        await fetch(HOST+'/uploadStudentInformation/', {\r\n            method: 'POST', headers: header , body:JSON.stringify({\r\n                'jsonfromcsv': this.state.jsonfromcsv,\r\n                }),\r\n            })\r\n            .then(res => { \r\n                toast.dismiss('studentuploadinfo');\r\n                if(res.status == 400){toast.error('Bad Request');return}\r\n                if(res.status == 401){toast.error('Unauthorized');return}\r\n                if(res.status == 403){toast.error('Forbidden');return}\r\n                if(res.status == 409){\r\n                    toast.error(res.statusText);\r\n                }\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                if(data.exception){\r\n                    toast.warn(data.exception[0]+' Total Processed: '+data.processed, {autoClose:6000});\r\n                    this.setState({students:data.students, jsonfromcsv:[]});\r\n                    return\r\n                }\r\n                this.setState({students:data, jsonfromcsv:[]});\r\n                toast.success(\"Student data upload Completed\");\r\n            }).catch(()=> {\r\n                this.setState({students:[], jsonfromcsv:[]});\r\n                toast.error(\"Something went Wrong!\");\r\n            });\r\n    }\r\n    render(){\r\n        let studentsedit = <div className=\"container\">\r\n            <table className= \"table table-bordered table-responsive table-hover table-sm\">\r\n                <tbody>\r\n                    <tr><td>Name</td><td>Phone</td><td>address</td><td>DOB</td><td>Grade</td></tr>\r\n                    {\r\n                    this.state.students.map((student, index)=>{\r\n                        return <tr key={index}>\r\n                            <td><input type=\"text\" className=\"form-control form-control-sm\" onBlur={(event)=>this.updateStudentName(event, student)} placeholder={student.student_name}/></td>\r\n                            <td><input type=\"text\" className=\"form-control form-control-sm\" onBlur={(event)=>this.updateStudentPhone(event, student)} placeholder={student.phone}/></td>\r\n                            <td><input type=\"text\" className=\"form-control form-control-sm\" onBlur={(event)=>this.updateStudentAddress(event, student)} placeholder={student.address}/></td>\r\n                            <td><input type=\"text\" className=\"form-control form-control-sm\" onBlur={(event)=>this.updateStudentDOB(event, student)} placeholder={student.date_of_birth}/></td>\r\n                            <td><select onChange={(event)=>this.updateStudentGrade(event, student)} ref={this.gradeselectRef} className=\"form-control form-control-sm my-auto\" defaultValue=\"none\">\r\n                                <option value=\"none\" disabled hidden>{this.state.grades.find(grade=>grade.id == student.student_grade).name}</option> \r\n                                    {\r\n                                    this.state.grades.map((items, key) => \r\n                                        <option key={key} value={items.id}>{items.name}</option>\r\n                                    )}\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                    })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        let student_search = <div className = \"container\">\r\n            <div className=\"btn-group mx-auto my-auto\">\r\n                <div className=\"form-inline input-group input-group-sm dropdown mx-2\">\r\n                        <input type=\"text\" className=\"form-control dropdown-toggle  my-auto\" \r\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" placeholder=\"Search and Add\"\r\n                        onKeyUp={(e)=>this.filterStudents(e)} ref={this.filterstudentsinputid} />\r\n                        <span className=\"input-group-text\" disabled><FontAwesomeIcon icon={faSearch} /></span>\r\n                        <div  className=\"dropdown-menu overflow-auto studentsearcheditsubjectstudent\" style={{height: 200 + 'px'}} >\r\n                            <table className=\"table table-bordered table-striped table-hover table-sm\">\r\n                                <thead><tr><td>Students Name</td></tr></thead>\r\n                                <tbody ref = {this.filterstudentslist}>{\r\n                                this.state.students.map((items, key) => \r\n                                <tr key={key} value={items.id}><td onClick={ (e)=>this.addStudentToSubject(e, )} value={items.id}>{items.student_name}</td></tr>\r\n                                )\r\n                                }</tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        let subjectsedit = <div className=\"container\">\r\n            <table className=\"table-responsive table table-bordered table-hover table-sm text-left\">\r\n                <tbody>\r\n                    <tr><td>SN</td><td>CODE</td><td>Subject name</td><td>Teacher</td><td>Students</td></tr>\r\n                    {\r\n                        this.state.subjects.map(\r\n                            (subject,index)=>{\r\n                            return <tr key={index}>\r\n                                <td>{index+1}</td>\r\n                                <td>{subject.code}</td>\r\n                                <td>{subject.name}</td>\r\n                                <td><select onChange={(event)=>this.updateSubjectTeacher(event, subject)} ref={this.subjectselectRef} className=\"form-control form-control-sm my-auto\" defaultValue=\"none\">\r\n                                    <option value=\"none\" disabled hidden>{this.state.teachers.find(teacher=> teacher.id == subject.teacher).username}</option> \r\n                                    {\r\n                                    this.state.teachers.map((items, key) => \r\n                                        <option key={key} value={items.id}>{items.username}</option>\r\n                                    )}\r\n                                </select>\r\n                                </td>\r\n                                <td className=\"width-60\">\r\n                                    <div className = \"container\">\r\n                                        <div className=\"btn-group mx-auto my-auto\">\r\n                                            <div className=\"form-inline input-group input-group-sm dropdown mx-2\">\r\n                                                    <input type=\"text\" className=\"form-control dropdown-toggle  my-auto\" \r\n                                                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" placeholder=\"Search and Add\"\r\n                                                    onKeyUp={(e)=>this.filterStudents(e)} ref={this.filterstudentsinputid} />\r\n                                                    <span className=\"input-group-text\" disabled><FontAwesomeIcon icon={faSearch} /></span>\r\n                                                    <div  className=\"dropdown-menu overflow-auto studentsearcheditsubjectstudent\" style={{height: 200 + 'px'}} >\r\n                                                        <table className=\"table table-bordered table-striped table-hover table-sm\">\r\n                                                            <thead><tr><td>Students Name</td></tr></thead>\r\n                                                            <tbody ref = {this.filterstudentslist}>{\r\n                                                            this.state.students.map((items, key) =>{\r\n                                                                \r\n                                                               return (items.student_grade == subject.grade)?<tr key={key} value={items.id}><td onClick={ (e)=>this.addStudentToSubject(e, subject)} value={items.id}>{items.student_name}</td></tr>:null\r\n                                                            })\r\n                                                            }</tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                    </div> {\r\n                                    this.state.studentsubject.map((studentsubject, ind)=>{\r\n                                        if(studentsubject.subject == subject.id){\r\n                                            return <span className=\"mx-1 btn-group btn-sm subjectstudentspan\" key={ind}>\r\n                                                {this.state.students.find(student=>student.id == studentsubject.student).student_name}\r\n                                                <button className=\"btn btn-sm d-flex\"><FontAwesomeIcon icon={faTimes} color=\"red\" onClick={()=>this.deleteStudentFromSubject(studentsubject.student, subject.id)}/></button>\r\n                                            </span>\r\n                                        }\r\n                                    })    \r\n                                }</td>\r\n                            </tr>\r\n                            }\r\n                        )\r\n                    }\r\n\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        let importfromcsv = <div className=\"container\">\r\n                <div className=\"inputfile\">\r\n                    <CSVReader cssClass=\"react-csv-input\"\r\n                            label=\"Select CSV with Student's information and header as the table header without SN\"\r\n                            onFileLoaded={(data, fileInfo) => {\r\n                                let title = [];\r\n                                title = data[0];\r\n                                let jsonarray = [];\r\n                                data.slice(1).map(d=>{\r\n                                    let row = {};\r\n                                    row[title[0]]=d[0];\r\n                                    row[title[1]]=d[1];\r\n                                    row[title[2]]=d[2];\r\n                                    row[title[3]]=d[3];\r\n                                    row[title[4]]=d[4];\r\n                                    jsonarray.push(row);\r\n                                })\r\n                                this.setState({\r\n                                    jsonfromcsv: jsonarray,\r\n                                });\r\n                                }} />\r\n                    \r\n                </div>\r\n                    {\r\n                        <table className= \"table table-bordered table-hover table-sm\">\r\n                        <tbody>\r\n                            <tr><td>SN</td><td>student</td><td>phone</td><td>address</td><td>dob</td><td>grade</td></tr>\r\n                            {\r\n                            this.state.jsonfromcsv.map((student, index)=>{\r\n                                    if (student.student == undefined || student.student == \"\"){\r\n                                        return null\r\n                                    }\r\n                                    return <tr key={index}>\r\n                                        <td>{index+1}</td>\r\n                                        <td>\r\n                                            <input type=\"text\" onChange={(e)=>{ \r\n                                                let jsonfromcsv = [... this.state.jsonfromcsv];\r\n                                                jsonfromcsv[index].student = e.target.value;\r\n                                                this.setState({jsonfromcsv});\r\n                                            }} \r\n                                    className=\"form-control form-control-sm\"  value={student.student}/></td>\r\n                                        <td>\r\n                                            <input type=\"text\" onChange={(e)=>{ \r\n                                                let jsonfromcsv = [... this.state.jsonfromcsv];\r\n                                                jsonfromcsv[index].phone = e.target.value;\r\n                                                this.setState({jsonfromcsv});\r\n                                            }} className=\"form-control form-control-sm\"  value={student.phone}/></td>\r\n                                        <td>\r\n                                            <input type=\"text\" onChange={(e)=>{ \r\n                                                let jsonfromcsv = [... this.state.jsonfromcsv];\r\n                                                jsonfromcsv[index].address = e.target.value;\r\n                                                this.setState({jsonfromcsv});\r\n                                            }} className=\"form-control form-control-sm\"  value={student.address}/></td>\r\n                                        <td>\r\n                                            <input type=\"text\" onChange={(e)=>{ \r\n                                                let jsonfromcsv = [... this.state.jsonfromcsv];\r\n                                                jsonfromcsv[index].dob = e.target.value;\r\n                                                this.setState({jsonfromcsv});\r\n                                            }} className=\"form-control form-control-sm\"  value={student.dob}/></td>\r\n                                        <td>\r\n                                            <select onChange={(e)=>{ \r\n                                                let jsonfromcsv = [... this.state.jsonfromcsv];\r\n                                                jsonfromcsv[index].grade = e.target.value;\r\n                                                this.setState({jsonfromcsv});\r\n                                            }} className=\"form-control form-control-sm my-auto\" defaultValue=\"none\">\r\n                                            <option value=\"none\" disabled hidden>{student.grade}</option> \r\n                                                {\r\n                                                this.state.grades.map((items, key) => \r\n                                                    <option key={key} value={items.name}>{items.name}</option>\r\n                                                )}\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                })\r\n                                }\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr>\r\n                                    <td colSpan=\"5\">{(this.state.jsonfromcsv.length>0)?<button className=\"btn btn-outline-success btn-sm\" onClick={() => this.uploadStudentInformation()}>Upload</button>:'Select students csv from above'}</td>\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table>\r\n                    }\r\n        </div>\r\n        return <div className=\"container\">\r\n        <div className=\"container\">\r\n        <nav className=\"navbar navbar-expand-md navbar-light bg-light my-2\">\r\n            {/* <div className=\"navbar-brand btn-group\">\r\n                <button type=\"button\" className=\"btn btn-outline-secondary dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    \r\n                </button>\r\n                <div className=\"dropdown-menu\">\r\n                    <button className=\"dropdown-item\" ></button>\r\n                    \r\n                </div>\r\n            </div> */}\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText1\" aria-controls=\"navbarText1\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarText1\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li> <button className=\"btn btn-sm mx-4\" onClick={this.edit_student_clicked}>Edit Student Details</button></li>\r\n                    <li> <button className=\"btn btn-sm mx-4\" onClick={this.edit_student_subject_clicked}>Edit Student Subject</button></li> \r\n                    <li> <button className=\"btn btn-sm mx-4\" onClick={this.import_from_csv}>Import Student from CSV</button></li> \r\n                </ul>\r\n            </div>    \r\n        </nav>\r\n    </div>\r\n    {(this.state.display == 1)?studentsedit:(this.state.display == 2)?subjectsedit:(this.state.display == 3)?importfromcsv:null}\r\n    \r\n</div>\r\n    }\r\n}","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Helmet } from 'react-helmet'\r\nimport Nav from './Nav';\r\nimport LoginForm from './LoginForm';\r\nimport SignupForm from './SignupForm';\r\nimport Welcome from './Welcome';\r\nimport Home from './Home';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {TITLE, HOST} from './constants';\r\nimport Result from './Result';\r\nimport AdminInput from './AdminInput';\r\ntoast.configure({\r\n  autoClose: 3000,\r\n  draggable: false,\r\n  //etc you get the idea\r\n});\r\nclass App extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    const refresh_token = null;\r\n    const access_token = null;\r\n    const local_storage = false;\r\n    this.state = {\r\n      displayed_form: '',\r\n      logged_in: this.get_refresh_token(local_storage) ? true : false,\r\n      username: '',\r\n      userid:'',\r\n      access_token:(access_token)? access_token:'',\r\n      display_result: false,\r\n      is_admin:false,\r\n    }\r\n  }\r\n  set_refresh_token(local, refresh){\r\n    if(!local){\r\n      this.refresh_token = refresh;\r\n    }else{\r\n      localStorage.setItem('refresh', refresh);\r\n    }\r\n  }\r\n  get_refresh_token = (local)=>{\r\n    if(!local){\r\n      return this.refresh_token;\r\n    }else{\r\n      return localStorage.getItem('refresh');\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    setInterval(()=>{\r\n      if(this.get_refresh_token(this.local_storage)){\r\n        this.refresh_access_token();\r\n      }\r\n    }, 1000*60*4.5);\r\n  }\r\n\r\n  handle_login = (e, data) => {\r\n    e.preventDefault();\r\n    fetch(HOST+'/api/token/',{\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(res => {\r\n        if(res.status === 401){\r\n          return -1;\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(json => {\r\n        if(json === -1 || json.non_field_errors){\r\n          toast.error(\"Unable to log in with provided credentials.\");  \r\n          return;\r\n        }\r\n        this.set_refresh_token(this.local_storage, json.refresh);\r\n        this.setState({\r\n          logged_in: true,\r\n          displayed_form: '',\r\n          access_token: json.access,\r\n        });\r\n        this.get_username();\r\n        this.check_admin();\r\n      }).catch(function(error) {\r\n        toast.error(\"Something went Wrong!\");\r\n    });\r\n  };\r\n\r\n  handle_signup = (e, data) => {\r\n    e.preventDefault();\r\n    // fetch(HOST + '/users/', {\r\n    //   method: 'POST',\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json'\r\n    //   },\r\n    //   body: JSON.stringify(data)\r\n    // })\r\n    //   .then(res => res.json())\r\n    //   .then(json => {\r\n    //     this.set_refresh_token(this.local_storage, json.refresh);\r\n    //     this.setState({\r\n    //       logged_in: true,\r\n    //       displayed_form: '',\r\n    //       access_token: json.access,\r\n    //     });\r\n    //     this.get_username();\r\n    //   });\r\n  };\r\n  \r\n  handle_logout = () => {\r\n    localStorage.removeItem('refresh');\r\n    this.setState({ logged_in: false, username: '', userid:'', access_token:null});\r\n    this.refresh_token = '';\r\n  };\r\n\r\n  display_form = form => {\r\n    this.setState({\r\n      displayed_form: form\r\n    });\r\n  };\r\n  \r\n  display_home = ()=>{\r\n    this.setState(\r\n      {\r\n        displayed_form: 'Home'\r\n      }\r\n    );\r\n  };\r\n  auth_headers = () => {\r\n    if (this.state.access_token) { \r\n      return { Authorization: `Bearer ${this.state.access_token}` };\r\n    } else {\r\n        return {};\r\n    }\r\n  }\r\n  refresh_access_token = () =>{\r\n    return fetch(HOST+'/api/token/refresh/', {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: `{\r\n          \"refresh\":\"${this.get_refresh_token(this.local_storage)}\"}`    \r\n      })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n          if(json.non_field_errors){\r\n              toast.error(\"Couldn't Refresh. Something Went Wrong.\");  \r\n              return;\r\n          }\r\n          this.setState({access_token:json.access});\r\n          return json.access;\r\n        })\r\n      .catch(function(error) {\r\n        toast.error(\"Sorry. Something went wrong while refreshing.\");\r\n    });\r\n  }\r\n  get_username = async() => {\r\n    const header = this.auth_headers();\r\n    await fetch(HOST+'/current_user/', {\r\n        method: 'GET',\r\n        headers: header ,     \r\n        })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if(json.username == undefined){\r\n          return\r\n        }\r\n        this.setState({ username: json.username, userid: json.id });\r\n        toast.success('Welcome ' + this.state.username);\r\n      });\r\n  }\r\n  check_admin = async() => {\r\n    const header = this.auth_headers();\r\n    await fetch(HOST+'/is_admin/', {\r\n        method: 'GET',\r\n        headers: header ,     \r\n        })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        this.setState({ is_admin: json });\r\n      });\r\n  }\r\n  show_result=()=>{\r\n    this.setState({\r\n      display_result:true,\r\n    });\r\n  }\r\n  show_home=()=>{\r\n    this.setState({\r\n      display_result:false,\r\n    });\r\n  }\r\n  render() {\r\n    let form;\r\n    switch (this.state.displayed_form) {\r\n      case 'login':\r\n        form = <LoginForm handle_login={this.handle_login} />;\r\n        break;\r\n      case 'signup':\r\n        form = <SignupForm handle_signup={this.handle_signup} />;\r\n        break;\r\n        \r\n      default:\r\n        form = <Welcome />;\r\n        \r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <Helmet>\r\n          <title>{TITLE}</title>\r\n        </Helmet>\r\n        <Nav\r\n          logged_in={this.state.logged_in}\r\n          display_form={this.display_form}\r\n          handle_logout={this.handle_logout}\r\n          display_home = {this.display_home}\r\n          username = {this.state.username}\r\n        />\r\n        {this.state.logged_in ? \r\n          (this.state.displayed_form == 'AdminInput' && this.state.is_admin)?\r\n              <AdminInput auth_headers = {this.auth_headers} show_home={this.show_home} userid ={this.state.userid}/>\r\n            :\r\n              (this.state.display_result)?\r\n                <Result auth_headers = {this.auth_headers} show_home={this.show_home} userid ={this.state.userid}/>\r\n              :\r\n                <Home auth_headers = {this.auth_headers} show_result= {this.show_result}/>\r\n          :\r\n            form\r\n        }\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","// export const HOST = 'http://localhost:8000';\r\nexport const HOST = '';\r\nexport const TITLE = 'Exam Report';\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import $ from 'jquery';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}